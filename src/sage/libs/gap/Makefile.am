# this file is part of Sage
# (c) 2013 Felix Salfelder
# license: gplv3+
#
include $(top_srcdir)/common.mk

inst_PYTHON = all.py gap_functions.py \
    __init__.py test_long.py \
    context_managers.py

AM_DEFAULT_SOURCE_EXT = .pyx
inst_LTLIBRARIES = element.la libsagegap.la util.la
element_la_LIBADD = @CSAGE_LIBS@ @GMP_OR_MPIR_LIBS@ $(GAP_LIBS) -lm
element_la_CPPFLAGS = $(AM_CPPFLAGS)

libsagegap_la_LIBADD = @CSAGE_LIBS@ @GMP_OR_MPIR_LIBS@ $(GAP_LIBS) -lm
libsagegap_la_CPPFLAGS = $(AM_CPPFLAGS)

util_la_LIBADD = @CSAGE_LIBS@ @GMP_OR_MPIR_LIBS@ $(GAP_LIBS) -lm
util_la_CPPFLAGS = $(AM_CPPFLAGS)

if HAVE_LIBGAP

GAP_LIBS = -lgap

AM_CPPFLAGS+=-DHAVE_LIBGAP
CLEANFILES+= libgap.la

else

libGAP.h: libGAPify.py
	$(PYTHON) $< --modify @GAP_INCLUDEDIR@ > $@

BUILT_SOURCES = libGAP.h
element.lo libsagegap.lo util.lo: $(BUILT_SOURCES)
element_la-element.lo libsagegap_la-libsagegap.lo util_la-util.lo test/main-main.o: $(BUILT_SOURCES)

CLEANFILES += libGAP.h syms

GAP_LIBS = libgap.la
lib_LTLIBRARIES = libgap.la
.o.lo:
	@echo creating mangled libtool object $@ from $<
#  objcopy --redefine-syms=<( grep ^libGAP @srcdir@/libgap.link | tr ';' ' '| awk '{printf("%s %s\n", $$3, $$1)}' ) $< $(notdir $<)
#	grep ^libGAP @srcdir@/libgap.link | tr ';' ' '| awk '{printf("%s %s\n", $$3, $$1)}' > syms
	objcopy --redefine-syms=syms $< $(notdir $<)
	@echo "# $@ - a libtool object file" > $@
	@echo "# Generated by libtool (GNU libtool)" >> $@
	@echo "pic_object='$(notdir $<)'" >> $@
	@echo "non_pic_object='$(notdir $<)'" >> $@

syms: libgap.link
	grep ^libGAP @srcdir@/libgap.link | tr ';' ' '| awk '{printf("%s %s\n", $$3, $$1)}' > syms

libgap_la_DEPENDENCIES = \
    libgap.link libgap.version

nodist_libgap_la_SOURCES = \
  ariths.o    c_random.o  gmpints.o   objccoll.o  rational.o  system.o  \
  blister.o   c_type1.o   gvars.o     objcftl.o   read.o      tietze.o  \
  bool.o      cyclotom.o  integer.o   objects.o   records.o   vars.o    \
  calls.o     dt.o        intfuncs.o  objfgelm.o  saveload.o  vec8bit.o \
  c_filt1.o   dteval.o    intrprtr.o  objpcgel.o  vecffe.o  \
  c_meths1.o  exprs.o     objscoll.o  sctable.o   vecgf2.o  \
  code.o      finfield.o  opers.o     set.o       vector.o  \
  compiler.o  funcs.o     listfunc.o  permutat.o  stats.o     weakptr.o \
  compstat.o  listoper.o  plist.o     streams.o   \
  c_oper1.o   lists.o     precord.o   string.o    \
  costab.o    macfloat.o  range.o


# # actual libgap source
nodist_libgap_la_SOURCES+= libgap.o


$(nodist_libgap_la_SOURCES:%.o=%.lo): %.lo: syms

#
# # these have been hacked, keep a copy here
LIBGAP_HACKED = scanner gasman iostream sysfiles gap
nodist_libgap_la_SOURCES+= scanner.hacked.o gasman.hacked.o \
                           iostream.hacked.o sysfiles.hacked.o gap.hacked.o

libgap_la_LDFLAGS = -no-undefined -L@top_builddir@/../c_lib/src/.libs

# libgap_la_LDFLAGS+= -Wl,--default-script=@srcdir@/libgap.link $(AM_LDFLAGS)
# libgap_la_LDFLAGS+= -Wl,@srcdir@/libgap.link
libgap_la_LDFLAGS+= -Wl,--version-script=@srcdir@/libgap.version
# libgap_la_LDFLAGS+= -export-symbols-regex 'lib[Gg][Aa][Pp]_*' $(AM_LDFLAGS)

libgap_la_CPPFLAGS = -iquote@GAP_INCLUDEDIR@ $(AM_CPPFLAGS)
libgap_la_CFLAGS = -m64 -Wall -Werror $(AM_CFLAGS)

VPATH+= $(GAP_LIB_DIR)

cond_MAIN = main
endif

# main_CFLAGS = @GMP_CFLAGS@
main_CPPFLAGS = -DGAPDIR="\"@GAP_DATA_DIR@\""
main_LDADD = -lgap -ldl -lutil
main_LDFLAGS = @GMP_OR_MPIR_LIBS@ -lm -L@top_builddir@/../c_lib/src/.libs

$(LIBGAP_HACKED:%=%.hacked.lo): %.hacked.lo: %.c libGAP.h syms
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgap_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT $@ -MD -MP -MF $(DEPDIR)/libgap_la-$*.Tpo -c -o $@ `test -f '$*.c' || echo '$(srcdir)/'`$*.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgap_la-$*.Tpo $(DEPDIR)/$*hmmm
	objcopy --redefine-syms=syms .libs/$*.hacked.o

libgap.lo: libgap.c libGAP.h syms
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgap_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT $@ -MD -MP -MF $(DEPDIR)/libgap_la-libgap.Tpo -c -o $@ `test -f 'libgap.c' || echo '$(srcdir)/'`libgap.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgap_la-libgap.Tpo $(DEPDIR)/libgaphmmm
	objcopy --redefine-syms=syms .libs/libgap.o

noinst_HEADERS = libgap_wrap.h libgap.h libgap_internal.h

EXTRA_DIST = $(LIBGAP_HACKED:%=%.c) libgap.link libgap.version

check_PROGRAMS = $(cond_MAIN)
TESTS = $(cond_MAIN)
main_SOURCES = test/main.c

