#!/usr/bin/env bash

if [ "$SAGE_PREFIX" = "" ]; then
   echo "SAGE_PREFIX undefined ... exiting";
   echo "Maybe run 'sage -sh'?"
   exit 1
fi

if [ "x$SAGE64" = xyes ]; then
   echo "Building a 64-bit version of matplotlib"
   CFLAGS="-O2 -g -m64 "; export CFLAGS
   LDFLAGS="-m64 "; export LDFLAGS
fi

MPLINITFILE="$SAGE_LOCAL/lib/python2.7/site-packages/matplotlib/__init__.py"
export MPLINITFILE

# Write a configuration file to src/setup.cfg
cp patches/make-setup-config.py .
python make-setup-config.py

# Apply patches.  See SPKG.txt for information about what each patch
# does.
( echo "include spkg.mk" | sage-dist-make - patch-stamp ) || exit $?

cd src

# Now build
python setup.py build

if [ $? -ne 0 ]; then
   echo "Error building matplotlib package."
   exit 1
fi

# FIXME:
rm -rf "$SAGE_LOCAL"/lib/python/site-packages/matplotlib

# Finally install
sage-setup.py install --record=$FILELIST

# Use a matplotlib config directory specific to Sage and specific to
# the version number of matplotlib, by setting the environment
# variable MPLCONFIGDIR.  See
# http://trac.sagemath.org/sage_trac/ticket/6235 and
# http://trac.sagemath.org/sage_trac/ticket/9221.  Find the version

# Print value of MPLCONFIGDIR
# FIXME: python2.7 or python?
# FIXME: use INSTALL
MPLINITFILE="$SAGE_LOCAL/lib/python2.7/site-packages/matplotlib/__init__.py"
if [ -f "$MPLINITFILE" ]; then
    MPLVERSION=`sed -n "/^__version__[ ]*=/s/[^']*'\([^']*\)'.*$/\1/p" "$MPLINITFILE"`
    echo
    echo "When Sage runs, MPLCONFIGDIR will be set to '\$DOT_SAGE/matplotlib-$MPLVERSION'."
    echo MPLCONFIGDIR=\"\$DOT_SAGE/matplotlib-$MPLVERSION\" > $SAGE_LOCAL/etc/env.d/mpl.sh
    echo "[ -n \"$DOT_SAGE\" ] && export MPLCONFIGDIR" >> $SAGE_LOCAL/etc/env.d/mpl.sh
    echo
else
    echo "$MPLINITFILE not found.  What happened?"
    exit 1
fi
