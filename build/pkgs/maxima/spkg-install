#!/usr/bin/env bash

set -x
env >/tmp/maxen

# lets export them, you never know...
MAXIMA_PREFIX=$SAGE_PREFIX
SAGE_MAXIMA_INIT="$SAGE_ETC/sage-maxima.lisp"
export SAGE_MAXIMA_INIT MAXIMA_PREFIX

if [[ -z "$SAGE_PREFIX" ]]; then
    echo >&2 "Error: SAGE_PREFIX undefined - exiting..."
    echo >&2 "Maybe run 'sage -sh'?"
    exit 1
fi

check_error() {
    if [[ $? -ne 0 ]]; then
        echo >&2 "***********************************************************"
        echo >&2 "Error:" $@
        echo >&2 "***********************************************************"
        exit 1
    fi
}

# Sometimes, ECL gives interactive prompts when something goes wrong
# during the build. Avoid this by redirecting stdin from /dev/null.
# See http://trac.sagemath.org/sage_trac/ticket/11884#comment:34
exec </dev/null


# We don't have to set up CFLAGS etc., since these are taken from ECL
# (i.e., ECL uses the ones that were specified when ECL was built).

export MAKE="$MAKE -j1"  # force sequential build (1 job)

( echo "include spkg.mk" | sage-dist-make - patch-stamp ) || exit $?

CUR=`pwd`
cd src/

echo
echo "Now configuring Maxima..."
echo `which ecl`
./configure --prefix="$SAGE_PREFIX" --libdir="$SAGE_PREFIX/lib" --enable-ecl
check_error "Failed to configure Maxima."


# Touching html and info files to avoid to regenerate them.
# This must be done after configuration since the timestamps need
# to be later than include-maxima.texi which is generated at
# configuration time:
echo
echo "Now touching documentation files..."
touch `find doc/info -name \*.info\* -o -name \*.html`
check_error "Failed to touch documentation files."


echo
echo "Now building Maxima..."
$MAKE
check_error "Failed to build Maxima."

echo
echo "Now installing Maxima... $FILELIST"
$MAKE install INSTALL=sage-dist-install
check_error "Failed to install Maxima."


if [[ -f "$DOT_SAGE/maxima_commandlist_cache.sobj" ]]; then
    echo
    echo "Deleting Maxima commandlist cache."
    echo "It will be recreated at the next start of Sage."
    rm -f "$DOT_SAGE"/maxima_commandlist_cache.sobj
fi


# Build Maxima as a Lisp library
# and install it into ECL's library directory:
echo
echo "Now building Maxima as an ECL library..."
echo "FIXME FIXME FIXME this is messing with installed files"
cd "$CUR/src/src" &&
mkdir -p ./lisp-cache &&
ecl \
  -eval '(require `asdf)' \
  -eval '(setf asdf::*user-cache* (truename "./lisp-cache"))' \
  -eval '(load "maxima-build.lisp")' \
  -eval '(asdf:make-build :maxima :type :fasl :move-here ".")' \
  -eval '(quit)'
check_error "Failed to build Maxima as an ECL library."

ECLLIB=`ecl -eval "(princ (SI:GET-LIBRARY-PATHNAME))" -eval "(quit)"`
echo
echo "Now installing the Maxima library as '$ECLLIB/maxima.fas'..."
PWD=`pwd`
if [[ -f "maxima.system.fasb" ]]; then
    echo "New ASDF encountered"
    cp -f maxima.system.fasb "$ECLLIB/maxima.fas"
    check_error "Failed to install '$PWD/maxima.system.fasb' as '$ECLLIB/maxima.fas'."
elif [[ -f "maxima.fasb" ]]; then
    echo "Old ASDF encountered"
    cp -f maxima.fasb "$ECLLIB/maxima.fas"
    check_error "Failed to install '$PWD/maxima.fasb' as '$ECLLIB/maxima.fas'."
else
    echo >&2 "Error: cannot find an .fasb file to install - exiting..."
    exit 1
fi


if [[ "$SAGE_SPKG_INSTALL_DOCS" = yes ]] ; then
    # Install a copy of the Maxima HTML documentation locally.
    cd "${CUR}/src"

    # The Maxima HTML docs are already built, we just need to install
    # them to the sage installation.
    MAXIMA_DOCS=$SAGE_ROOT/local/share/doc/maxima
    MAXIMA_FIGURES=$MAXIMA_DOCS/figures

    mkdir -p $MAXIMA_FIGURES

    # The HTML documentation only uses the GIF figures, not the PDF
    # ones.
    cp doc/info/*.html        $MAXIMA_DOCS
    cp doc/info/figures/*.gif $MAXIMA_FIGURES
fi

echo "MAXIMA_PREFIX=\"\$SAGE_PREFIX\" && export MAXIMA_PREFIX" > maxima.sh
echo "SAGE_MAXIMA_INIT=\"\$SAGE_ETC/sage-maxima.lisp\" && export SAGE_MAXIMA_INIT" >> maxima.sh
echo '(setf *prompt-prefix* "<sage-display>")' > sage-maxima.lisp

sage-dist-install -d $DESTDIR$SAGE_ETC/env.d
sage-dist-install -t $DESTDIR$SAGE_ETC sage-maxima.lisp
sage-dist-install -t $DESTDIR$SAGE_ETC/env.d maxima.sh
