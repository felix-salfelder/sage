rebase cliquer paching to sage-upstream

<package>-distcheck should run -check

CHECK: must gcc build build toolchain twice? (done?)

FIXME: trap INT TERM EXIT during spkg-install (delete install-stamp!)

paths are suboptimal.
/build/pkgs should be /pkgs
/src should be pkgs/sagelib

dependencies must be where packages are, not in "deps"

CORE_MODULES should be built with VPATH (?) but with spkg-install

failing doctests, due to hardcoded paths

what about doctesting optional packages (lrcalc and the like?)

unstage before fresh stage (when automatically staging?)

make -n doesnt work very well

recheck: stage unstages before build has completed (good idea?)

suppress useless "Entering directory" output

decruft dependencies (sagelibspkg vs parts of it)

lapack, atlas. (argh). the lapack package does not install lapack. disabling atlas requires system lapack

hook sage -b etc, complete old Makefile interface.

BUG (sometimes? randomly?): do git hopping, make
../configure: line 5703: syntax error near unexpected token `Cython,CHK_cython=negative'
../configure: line 5703: `   SAGE_CHECK_PYTHON_MODULE(Cython,CHK_cython=negative)'
make: *** [config.status] Error 2
toplevel ./autogen.sh repairs this

remove this file

installation: can be implemented as follows:
- make DESTDIR work (e.g. through sage-dist-install)
- configure sage (the distribution) with a prefix, as usual
- build sage (will install with DESTDIR=@top_builddir@/.local
- @top_builddir@/local symlinks to .local/$prefix
- "make install" now just installs everything

always (cd /x && $(LN_S) foo bar) instead of $(LN_S) foo /x/bar

use AS_IF

