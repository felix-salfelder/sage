#!/usr/bin/env bash
# This file is no longer autogenerated.

# Begin boilerplate

CUR=$PWD

die () {
    echo >&2 "$@"
    exit 1
}

[ -n "$SAGE_LOCAL" ] || die 'Error: $SAGE_LOCAL not set. Source sage-env or run this script from `sage -sh`.'

[ -z "$CPATH" ] || CPATH="$CPATH":
[ -z "$LIBRARY_PATH" ] || LIBRARY_PATH="$LIBRARY_PATH":
export CPATH="$CPATH""$SAGE_LOCAL"/include
export LIBRARY_PATH="$LIBRARY_PATH""$SAGE_LOCAL"/lib

# note: the -D_XOPEN_SOURCE=500 is to fix build errors in Twisted 12.1 on
# Solaris. See http://trac.sagemath.org/sage_trac/ticket/11080#comment:314 and
# the subsequent few comments.
export CPPFLAGS="-I$SAGE_LOCAL/include -D_XOPEN_SOURCE=500 $CPPFLAGS"
export LDFLAGS="-L$SAGE_LOCAL/lib $LDFLAGS"

if [ x$SAGE64 = "xyes" ]; then
    echo "Building with extra 64-bit flags for MacOS X and Open Solaris."
    if [ -z $CFLAG64 ]; then
        CFLAG64=-m64
    fi
    export CFLAGS="$CFLAGS $CFLAG64"
    export CPPFLAGS="$CPPFLAGS $CFLAG64"
    export CXXFLAGS="$CXXFLAGS $CFLAG64"
    export LDFLAGS="$LDFLAGS $CFLAG64"
fi

# End boilerplate

# prefixarg=prefix="$SAGE_LOCAL" ??

# Install dependencies
for PKG in $(cat src/install_order); do
    easy_install -H None "src/$PKG" $prefixarg || die "Error installing $PKG !"
done
PKG=$(ls -1 src | GREP_OPTIONS= grep sagenb-)

# Install sagenb into site-packages
easy_install -H None "src/$PKG" $prefixarg || die "Error installing sagenb !"

# this is a workaround, dont know how to apply patches to tarballs.
sed -e 's#import SAGE_DOC#import SAGE_DOC_SRC, SAGE_DOC#' \
    -e '/confdir/s#SAGE_DOC#SAGE_DOC_SRC#' \
    -i $SAGE_LOCAL/lib/python2.7/site-packages/sagenb-*/sagenb/misc/sphinxify.py

# make sure nobody uses wrong bytecode
rm -f $SAGE_LOCAL/lib/python2.7/site-packages/sagenb-*/sagenb/misc/sphinxify.pyc
